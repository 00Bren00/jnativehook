<?xml version="1.0" encoding="UTF-8"?>

<project default="jar" basedir=".">
	<!-- Project Settings -->
	<property name="project.name" value="dotNative"/>
	<property name="project.keyboard.name" value="Global Hook Keyboard"/>
	<property name="project.version" value="0.9.68"/>
	<property name="project.src" value="src"/>
	
	
	<!-- Path Settings -->
	<property name="dir.dist" value="dist"/>
	<property name="dir.classes" value="${dir.dist}/build"/>
	
	<!-- Compiler Settings -->
	<property name="javac.optimize" value="true"/>
	<property name="javac.debug" value="on"/>
	<property name="javac.source" value="1.6"/>
	<property name="javac.target" value="1.6"/>
	
	<target name="setenv" description="prepares the environment">
		<echo>Cleaning old build structure</echo>
		<delete includeemptydirs="true">
			<fileset dir="${dir.dist}" includes="**/*"/>
		</delete>
		
		<echo>Creating build structure</echo>
		<mkdir dir="${dir.dist}"/>
		<mkdir dir="${dir.classes}"/>
		
		<!-- Create Linux Branch -->
		<mkdir dir="${dir.dist}/Linux/x86_32"/>
		<mkdir dir="${dir.dist}/Linux/x86_64"/>
		
		<!-- Create OSX Branch -->
		<mkdir dir="${dir.dist}/OSX"/>
		
		<!-- Create Windows Branch -->
		<mkdir dir="${dir.dist}/Windows/x86_32"/>
		
		<path id="classpath">
			<pathelement location="${dir.classes}"/>
			<!--
			<fileset dir="${project.lib}">
				<include name="*.jar"/>
			</fileset>
			-->
		</path>
	</target>
	
	<target name="compile" depends="setenv" description="Compiles the classes">
		<echo>Compiling ${project.key.name} project source code</echo>
		<javac srcdir="${project.src}"
			destdir="${dir.classes}"
			classpathref="classpath"
			debug="${javac.debug}"
			optimize="${javac.optimize}"
			deprecation="false"
			source="${javac.source}"
			target="${javac.target}"
		/>
	</target>
	
	<target name="jar" depends="compile" description="Builds the required jar binaries">
		<!--
		<copy overwrite="true" todir="${project.build}/${dir.images}">
			<fileset dir="${project.web}/${dir.images}">
				<include name="*.jpg"/>
				<include name="*.gif"/>
				<include name="*.png"/>
			</fileset>
		</copy>
		-->
		
		<echo>Creating ${project.key.name} Keyboard jar file.</echo>
		<jar jarfile="${dir.classes}/libGlobalHook_Keyboard.jar" basedir="${dir.classes}">
			<include name="org/dotnative/globalhook/keyboard/**"/>
			<include name="org/dotnative/globalhook/GlobalScreen.class"/>
			<!-- <exclude name="org/dotnative/globalhook/keyboard/Driver.class"/> -->
			<manifest>
				<attribute name="Main-Class" value="org.dotnative.globalhook.keyboard.Driver"/>
				<section name="org/dotNative">
					<attribute name="Implementation-Title" value="${project.name} ${project.keyboard.name} Library"/>
					<attribute name="Implementation-Version" value="1.0"/> 
					<attribute name="Implementation-Vendor" value="1st Leg Development"/>
				</section>
			</manifest>
		</jar>
		
		<!-- Copy Files To Dist Locations -->
		<echo>Copying files to Linux branch..</echo>
		<copy 
			overwrite="true" 
			file="${dir.classes}/libGlobalHook_Keyboard.jar" 
			todir="${dir.dist}/Linux/x86_32"
		/>
		<copy 
			overwrite="true" 
			file="src/org/dotnative/globalhook/keyboard/cpp_source/Linux/x86_32/libGlobalHook_Keyboard.so" 
			todir="${dir.dist}/Linux/x86_32"
		/>
		
		<copy 
			overwrite="true" 
			file="${dir.classes}/libGlobalHook_Keyboard.jar" 
			todir="${dir.dist}/Linux/x86_64"
		/>
		<copy 
			overwrite="true" 
			file="src/org/dotnative/globalhook/keyboard/cpp_source/Linux/x86_64/libGlobalHook_Keyboard.so" 
			todir="${dir.dist}/Linux/x86_64"
		/>
		
		
		<echo>Copying files to OSX branch..</echo>
		
		
		<echo>Copying files to Windows branch..</echo>
		<copy 
			overwrite="true" 
			file="${dir.classes}/libGlobalHook_Keyboard.jar" 
			todir="${dir.dist}/Windows/x86_32"
		/>
		
		<copy 
			overwrite="true" 
			file="src/org/dotnative/globalhook/keyboard/cpp_source/Windows/x86_32/GlobalHook_Keyboard.dll" 
			todir="${dir.dist}/Windows/x86_32"
		/>
		
		<!--
		<echo>Creating client init script.</echo>
		<copy overwrite="true" file="${project.src}/org/dotnative/globalkeylistener/cpp_source/Linux/x86_32/libGlobalKeyListener.so" todir="${dir.key}"/>
		-->
		
		<echo>Cleaning old build structure.</echo>
		<delete includeemptydirs="true">
			<fileset dir="${dir.classes}" includes="**"/>
		</delete>
	</target>
</project>
